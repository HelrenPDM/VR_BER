//
//  VMERotPosProvider.cs
//
//  Author:
//       Stephan Gensch <stgensch@netzwerkcafe.org>
//
//  Copyright (c) 2015 Stephan Gensch
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;

/// <summary>
/// VME rot position provider to provide input for the player controller classes.
/// </summary>
public class VMERotPosProvider
{
	#region public variables
	public Camera CameraController = null;
	public VMEPlayerController PlayerController = null;
	#endregion

	#region private variables
	// base object
	private Transform UIAnchor;

	// heading controll
	private Quaternion LocalRotation;

	// nose pitch for forward (pitch down) or backward (pitch up) movement
	private float PitchDownAngle;
	private float PitchUpAngle;

	// roll for strafing left (roll left) or right (roll right)
	private float RollLeftAngle;
	private float RollRightAngle;
	#endregion

	/// <summary>
	/// Sets the camera controller.
	/// </summary>
	/// <param name="cameraController">Camera controller.</param>
	public void SetCameraController(ref Camera cameraController)
	{
		CameraController = cameraController;
		UIAnchor = CameraController.transform;
	}
	
	/// <summary>
	/// Sets the VME player controller.
	/// </summary>
	/// <param name="playerController">Player controller.</param>
	public void SetVMEPlayerController(ref VMEPlayerController playerController)
	{
		PlayerController = playerController;
	}

	/// <summary>
	/// Init this instance.
	/// </summary>
	public void Init()
	{
	}

	/// <summary>
	/// Updates the VME rotation position.
	/// </summary>
	public void UpdateVMERotPos()
	{
		UIAnchor.localRotation = CameraController.transform.localRotation;
	}

	public float GetPitchDownAngle()
	{
		PitchDownAngle = UIAnchor.localRotation.eulerAngles.z;
		return PitchDownAngle;
	}
}

